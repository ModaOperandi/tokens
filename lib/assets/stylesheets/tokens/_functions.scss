@import "utilities";
@import "variables";

@function font-family($key) {
  @return __fetch__(map-get($typography, "fonts"), $key);
}

@function color($key, $opacity: null) {
  $value: __fetch__(map-get($colors, "all"), $key);
  @if $opacity {
    @return rgba($value, $opacity);
  } @else {
    @return $value;
  }
}

// `__dangerously-get-` functions are named this way to discourage their use.
// Users of this library should always be utilizing codified text treatments via the `text` mixin.
@function __dangerously-get-letter-spacing__($index) {
  @return __access__(map-get($typography, "letter-spacing"), $index);
}

@function __dangerously-get-line-height__($index) {
  @return __access__(map-get($typography, "line-heights"), $index);
}

@function __dangerously-get-font-size__($index) {
  @return __access__(map-get($typography, "font-scale"), $index);
}

@function space($indexOrKey) {
  @if type-of($indexOrKey) != number {
    @return __fetch__(map-get($space, "map"), $indexOrKey);
  }

  @return __access__(map-get($space, "scale"), $indexOrKey);
}

@function spacing($indices...) {
  $spacing: ();

  @each $index in $indices {
    $spacing: append($spacing, space($index));
  }

  @return $spacing;
}

@function text-treatment($key) {
  @return __fetch__(map-get($typography, "text-treatments"), $key);
}

/// @param {prop (string)} $prop
///   The 0-based index to access
/// @param {list | bool} $list
///   Either list of properties
/// @return {string | null} declares !important or not
@function important($important: false, $prop: null) {
  @if type-of($important) == bool {
    @return if($important, !important, null);
  }

  @if type-of($important) == list {
    @return if(index($important, $prop), !important, null);
  }

  @return null;
}
